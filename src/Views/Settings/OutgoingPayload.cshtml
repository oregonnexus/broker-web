@{
    // Copyright: 2023 Education Nexus Oregon
    // Author: Makoa Jacobsen, makoa@makoajacobsen.com
    Layout = "_SettingsLayout";
}
<div>

<div x-data="outgoingPayload" class="grid gap-6">
    <p></p>
    <div>
      <h2 class="text-base font-semibold leading-7 text-gray-900">Outgoing Payload @Model.Payload</h2>
      <p class="mt-1 text-sm leading-6 text-gray-600">Data Sources</p>
    </div>
    <div>
      <label for="students" class="block text-sm font-medium leading-6 text-gray-900">Students</label>
      <div class="mt-2">
        <input id="students" x-model="settings.students" type="text" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-tertiary-700 sm:text-sm sm:leading-6">
      </div>
    </div>
    <div>
      <label for="assesments" class="block text-sm font-medium leading-6 text-gray-900">Assessments</label>
      <div class="mt-2">
        <input id="assesments" x-model="settings.assessments" type="text" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-tertiary-700 sm:text-sm sm:leading-6">
      </div>
    </div>
    <div>
      <label for="programAssociations" class="block text-sm font-medium leading-6 text-gray-900">Program Associations</label>
      <div class="mt-2">
        <input id="programAssociations" x-model="settings.programAssociations" type="text" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-tertiary-700 sm:text-sm sm:leading-6">
      </div>
    </div>
    <div>
      <label for="sectionAssociations" class="block text-sm font-medium leading-6 text-gray-900">Section Associations</label>
      <div class="mt-2">
        <input id="sectionAssociations" x-model="settings.sectionAssociations" type="text" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-tertiary-700 sm:text-sm sm:leading-6">
      </div>
    </div>
    <div>
      <label for="courseTranscripts" class="block text-sm font-medium leading-6 text-gray-900">Course Transcripts</label>
      <div class="mt-2">
        <input id="courseTranscripts" x-model="settings.courseTranscripts" type="text" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-tertiary-700 sm:text-sm sm:leading-6">
      </div>
    </div>
    <div>
      <label :for="grades" class="block text-sm font-medium leading-6 text-gray-900">Grades</label>
      <div class="mt-2">
        <input id="grades" x-model="settings.grades" type="text" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-tertiary-700 sm:text-sm sm:leading-6">
      </div>
    </div>
    <div class="flex justify-end">
      <button
        type="button"
        class="rounded-md bg-tertiary-700 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-tertiary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-tertiary-700"
        @@click="updateSettings"
      >
        Save
      </button>
    </div>
  </div>
</div>

@section scripts
{
<script>
  document.addEventListener('alpine:init', () => {
    Alpine.data('outgoingPayload', () => {
      return {
        settings: @Html.Raw(Json.Serialize(@Model.Settings)),

        async updateSettings() {
          try {
            const response = await fetch(@Html.Raw(Json.Serialize(Url.Action("UpdateOutgoingPayload", "Settings", new { payload = Model.Payload }))), {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(this.settings),
            })

            if (!response.ok) {
              throw new Error('Unable to save payload.')
            }
          } catch (error) {
            console.log(error)
          }
        }
      }
    })
  })
</script>
}
